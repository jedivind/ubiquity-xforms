<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:xf="http://www.w3.org/2002/xforms"
>
	<head>
		<title>Script</title>

		<xf:model id="mdlGreeting">
			<xf:instance id="data">
				<HelloWorld>
					<greeting>Hello</greeting>
					<who>World</who>
				</HelloWorld>
			</xf:instance>
		</xf:model>
		
		<style type="text/css">
			body {
				font-family			:	"Trebuchet MS", Verdana, Helvetica, sans-serif;
			}
			
			xf\:select1,
			xf\:input,
			xf\:output,
			xf\:trigger
			{
				display			:	block;
				margin-bottom	:	5px;
			}

			xf\:label {
				width	:	200px;
			}
			
			xf\:trigger xf\:label {
				width	:	auto;
			}			
			
			.normalText {
				font-weight		:	normal;
			}
			
			.boldText {
				font-weight		:	bold;
			}
		</style>
	</head>
	<body>
		<h1>
			Script
		</h1>
		<p>
			This example shows how script in the language that contains the XForms tags can be used to
			manipulate instance data. It works just like the 'Hello, World!' sample, but the target of
			your greeting is manipulated directly with script in an event handler.
			<code>
				<pre>
		&lt;script for="trChangeGreeting" event="DOMActivate" language="javascript" type="text/javascript">
			var theModel    = document.getElementById("mdlGreeting");
			var theInstance = theModel.getInstanceDocument("data");
			var theNode     = theInstance.selectSingleNode("//who");

			theNode.text = "Father Christmas";
			theModel.refresh();
		&lt;/script>

		&lt;xf:trigger id="trChangeGreeting">
			&lt;xf:label>Click here for seasons greetings&lt;/xf:label>
		&lt;/xf:trigger>
				</pre>
			</code>
		</p>
		<p>
			Note the use of the refresh() function. This gives the model the chance to update the forms
			controls with any changes. As you'll see if you initiate the script in the form below, this
			results in both the xf:output and xf:input changing to reflect the new data.
		</p>
		<xf:select1 ref="greeting">
			<xf:label>Change Greeting</xf:label>
			<xf:hint>Choose the greeting that you would like to use</xf:hint>
			<xf:item>
				<xf:label>Hello</xf:label>
				<xf:value>Hello</xf:value>
			</xf:item>
			<xf:item>
				<xf:label>Goodbye</xf:label>
				<xf:value>Goodbye</xf:value>
			</xf:item>
		</xf:select1>
		
		<xf:input ref="who">
			<xf:label>Greet Who?</xf:label>
			<xf:hint>Please say who you would like to greet</xf:hint>
		</xf:input>

		<xf:output value="concat(greeting, '&#160;', who, '!')" class="boldText">
			<xf:label class="normalText">Your greeting is:</xf:label>
		</xf:output>	

		<script for="trChangeGreeting" event="DOMActivate" language="javascript" type="text/javascript">
			var theModel    = document.getElementById("mdlGreeting");
			var theInstance = theModel.getInstanceDocument("data");
			var theNode     = theInstance.selectSingleNode("//who");

			theNode.text = "Father Christmas";
			theModel.refresh();
		</script>

		<xf:trigger id="trChangeGreeting">
			<xf:label>Click here for seasons greetings</xf:label>
		</xf:trigger>
	</body>
</html>
