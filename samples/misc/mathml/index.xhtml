<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--
  * Copyright (C) 2008 Backplane Ltd.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *  http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
-->
<html
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:m="http://www.w3.org/1998/Math/MathML"
	xmlns:xf="http://www.w3.org/2002/xforms"
>
	<head>
		<title>MathML Quiz</title>
		<script type="text/javascript" src="../../../src/ubiquity-loader.js" >/**/</script>
		
		<style>
			body {
				font-family			:	"Trebuchet MS", Verdana, Helvetica, sans-serif;
			}
			
			xf\:select1,
			xf\:input,
			xf\:group
			{
				display			:	block;
				margin-bottom	:	5px;
			}
			
			.boldText {
				font-weight		:	bold;
			}
		</style>
	</head>
	<body>
		<xf:model id="mdlQuiz">
			<xf:instance id="instAnswers">
				<quiz>
					<answer correct="256" result="0" help="Try using a calculator" ></answer>
					<answer correct="a" result="0" help="Cheat ... I would" ></answer>
					<score ></score>
				</quiz>
			</xf:instance>

			<xf:instance id="instComments">
				<comments>
					<currcomment></currcomment>
					<comment>Rubbish ... go back to school</comment>
					<comment>Not bad ... but could try harder</comment>
					<comment>Excellent ... but have you cheated?</comment>
				</comments>
			</xf:instance>

			<xf:bind
				nodeset="instance('instAnswers')/answer/@result"
				calculate="if(..=../@correct, '1', '0')"
			/>

			<xf:bind
				nodeset="instance('instAnswers')/score"
				calculate="sum(instance('instAnswers')/answer/@result)"
			/>
		</xf:model>
		<h1>
			MathML Quiz
		</h1>
		<p>
			The following form has MathML embedded in the XForms captions, so that mathematical symbols
			can be rendered for the questions. (Thanks to <a href="http://www.dessci.com/">Design Science</a>
			for their help with the MathML.)
		</p>
		<p>
			The first thing we need to do is ensure that we have the MathML namespace, and that we have
			connected it to a plug-in that understands MathML. We'll be using MathsPlayer from Design Science,
			so if you don't have this you'll need to download it by clicking on this link:
			<a href="http://www.dessci.com/mathplayer"><img src="MathPlayer.gif" align="middle" border="0" WIDTH="88" HEIGHT="31" /></a>
		</p>
		<p>
		<code>
			<pre>

&lt;?xml version="1.0" encoding="iso-8859-1"?>
&lt;html
 xmlns="http://www.w3.org/1999/xhtml"
 <span class="boldText">xmlns:m="http://www.w3.org/1998/Math/MathML"</span>
 xmlns:xf="http://www.w3.org/2002/xforms"
>

			</pre>
		</code>
		</p>
			Next we create the model that will hold the user's answers, and also help us to
			mark their answers. The first set of instance data holds an entry for each question:
			<ul>
				<li>the correct answer</li>
				<li>the users answer</li>
				<li>some help text</li>
			</ul>
			<p>
			<code>
				<pre>

&lt;head>
	&lt;title>MathML Quiz&lt;/title>
	&lt;xf:model id="mdlQuiz">
		&lt;xf:instance id="instAnswers">
			&lt;quiz>
				&lt;answer correct="256" result="" help="Try using a calculator" />
				&lt;answer correct="a" result="" help="Cheat ... I would" />
				&lt;score />
			&lt;/quiz>
		&lt;/xf:instance>

				</pre>
			</code>
		</p>
		<p>
			The second set of instance data holds comments that will be used to mark
			the user. There is one comment for each score:
			<code>
				<pre>

&lt;xf:instance id="instComments">
	&lt;comments>
		&lt;comment>Rubbish ... go back to school&lt;/comment>
		&lt;comment>Not bad ... but could try harder&lt;/comment>
		&lt;comment>Excellent ... but have you cheated?&lt;/comment>
	&lt;/comments>
&lt;/xf:instance>

				</pre>
			</code>
		</p>
		<p>
			To mark the user's answers we use the calculate model item property,
			on the xf:bind element. We have set aside an attribute called
			'result' on each 'answer' element, and we simply set it to one or
			zero depending on whether the user is correct or not. This is very
			different to the way you would write a 'normal' program; generally you
			would run through the results 'marking' each question:
			<code>
				<pre>

&lt;xf:bind
 nodeset="instance('instAnswers')/answer/@result"
 calculate="if(..=../@correct, 1, 0)"
/>

				</pre>
			</code>
		</p>
		<p>
			Note also how xf:bind operates over a nodeset. This means that it
			does not matter how many 'answer' elements there are in the quiz, we will
			always have a calculation that keeps the 'result' attribute up to date.
		</p>
		<p>
			Just as the result of each question is always up-to-date, so is the user's
			score. We calculate this simply by summing the 'result' values. Due to the
			dynamic nature of XForms, whenever the user changes or enters an answer, the
			'result' attribute is recaculated (as defined above) and then the 'score' is
			recalcuated:
			<code>
				<pre>

		&lt;xf:bind
		 nodeset="instance('instAnswers')/score"
		 calculate="sum(instance('instAnswers')/answer/@result)"
		/>
	&lt;/xf:model>
	&lt;link rel="stylesheet" href="/main.css" type="text/css" />
&lt;/head>

				</pre>
			</code>
		</p>
		<p>
			Finally, to display a message that is dependent on the user's score,
			we just use the score value as an index into the list of messages:
			<code>
				<pre>


&lt;xf:trigger>
	&lt;xf:label>How did I do?&lt;/xf:label>
	&lt;xf:message
	 level="modal"
	 ev:event="DOMActivate"
	 ref="instance('instComments')/comment[number(instance('instAnswers')/score) + 1]"
	 />
&lt;/xf:trigger>

				</pre>
			</code>
		</p>
		<p>
			Try different answers to these two questions, and see the different messages that
			are displayed when you click the button. To get full marks, put '256' into the first
			question, and choose
			<m:math>
				<m:mfrac>
					<m:mn>&#x03c0;</m:mn>
					<m:mn>2</m:mn>
				</m:mfrac>
			</m:math>
			for the second question.
		</p>
		<xf:group model="mdlQuiz" ref="instance('instAnswers')">
			<xf:input ref="answer[1]">
				<xf:label>
					A. Evaluate
					<m:math>
					  <m:msup>
					    <m:mn>2</m:mn>
					    <m:msup>
					       <m:mn>2</m:mn>
					       <m:mi>x</m:mi>
					    </m:msup>
					  </m:msup>
					  <m:mtext>&#xa0;when&#xa0;</m:mtext>
					  <m:mi>x</m:mi>
					  <m:mo>=</m:mo>
					  <m:mn>3</m:mn>
					</m:math>
				</xf:label>
				<xf:help ref="@help" ></xf:help>
			</xf:input>

			<xf:select1 appearance="full" ref="answer[2]">
				<xf:label style="display:block;">
					B. Which expression has an approximate value of 1.55?
				</xf:label>
				<xf:help ref="@help" ></xf:help>
				<xf:item>
					<xf:label>
						<m:math>
							<m:mi>sin</m:mi>
							<m:mo>(</m:mo>
							<m:mfrac><m:mn>&pi;</m:mn><m:mn>3</m:mn></m:mfrac>
							<m:mo>)</m:mo>
						</m:math>
					</xf:label>
					<xf:value>b</xf:value>
				</xf:item>
				<xf:item>
					<xf:label>
						<m:math>
							<m:mfrac>
								<m:mn>&#x03c0;</m:mn>
								<m:mn>2</m:mn>
							</m:mfrac>
						</m:math>
					</xf:label>
					<xf:value>a</xf:value>
				</xf:item>
				<xf:item>
					<xf:label>
						<m:math>
							<m:mfrac>
								<m:msqrt><m:mn>2</m:mn></m:msqrt>
								<m:mn>2</m:mn>
							</m:mfrac>
						</m:math>
					</xf:label>
					<xf:value>c</xf:value>
				</xf:item>
			</xf:select1>

			<xf:trigger>
				<xf:label>How did I do?</xf:label>
				<xf:setvalue
					ev:event="DOMActivate"
					ref="instance('instComments')/currcomment"
					value="instance('instComments')/comment[number(instance('instAnswers')/score) + 1]"
				></xf:setvalue>
				<xf:message
					level="modal"
					ev:event="DOMActivate"
					ref="instance('instComments')/currcomment"
				></xf:message>
			</xf:trigger>
		</xf:group>
	</body>
</html>
