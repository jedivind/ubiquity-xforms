#summary Feature branch to implement hint, message, and send.

|| SVN: || [http://code.google.com/p/ubiquity-xforms/source/browse/branches/hint-work hint-work] ||
|| Owner: || [http://code.google.com/u/mdmcente/ mdmcente] ||
|| Discussion: || To discuss implementation details on this branch, use the [http://groups.google.com/group/ubiquity-xforms-eng/ ubiquity-xforms-eng group], and add {{{[BranchHintWork]}}} to your comments. ||
|| Features: || One of the features to consider are FeatureTooltip. ||

=== ===

=== Hint ===

For setup, I created a lib/xforms/Hint.js file to have most of the hint code go in there.

So, when a mouseover event happens, it is recognized in the behaviours/decorator.xml file.
I added a some code to check to see if the element contained a hint element (as a child or as itself).  If the element does contain the hint element, the code dispatches a xforms-hint event.

The xforms-hint event is suppose to be recognized by the Hint's contructor, because the Hint's contructor has an EventListener listening for an xforms-hint event, but I don't think that is working right now.  The EventListener then calls the performAction method.  

The performAction method checks if the hint element is in the element that was moused-over.  If it is, then the method gets the text from the hint element.  Then, the method creates a message by using YAHOO.widget.Tooltip.  It's context is the element where the event came from.  It's text is the text that was just gotten.  And it's autodismissdelay is 2 seconds (which makes the hint message go away after 2 seconds).

If the hint element is not in the element that was moused-over, then the performAction method checks to see if a hint some place else belongs to that element with its "for" attribute.  The method gets the hint elements to check to see if a hint has a "for" attribute with the same value as the moused-over element's "id" attribute.  If one is found, then the method gets the text from the hint element.  Then, the method creates a message by using YAHOO.widget.Tooltip.  It's context is the moused-over element.  It's text is the text that was just gotten.  And it's autodismissdelay is 2 seconds (which makes the hint message go away after 2 seconds).  If no matching hint elemnts are found than there is no hint message that is shown.

I also added some display code in the default.css file to make the hint message look good.

There is a PROBLEM with the hint the way it is now.  An input can display a message when the input has an action element that is looking for the "xforms-hint" event even when that input does not have a hint element in it.  The test case I added should fail because of this problem, so you can look at it more in the _testsuite folder if you want to.

=== Message ===

A message was not displaying correctly, so I decide to work on it and I made it display pretty nicely.

I made the message's OK button visible with the code that I added in lib/xforms/actions.js.

I also made the message display correctly with the code that I added in default.css.  The message and it's header look a lot better with these settings.

=== Send ===

The send code was not working, so I decide to work on it and I made it work for now.

The main thing I changed was that I made the xform:send send an Event instead of a SubmissionEvent.  I don't think xforms:submission is working, so that could be affecting SubmissionEvent.  Keith is working on xforms:submission, so if we get that working, we might consider trying the SubmissionEvent again.