#summary Feature branch to implement alert.
#labels Branch

|| SVN: || [http://code.google.com/p/ubiquity-xforms/source/browse/branches/implement-alert implement-alert] ||
|| Owner: || [http://code.google.com/u/mdmcente/ mdmcente] ||
|| Discussion: || To discuss implementation details on this branch, use the [http://groups.google.com/group/ubiquity-xforms-eng/ ubiquity-xforms-eng group], and add {{{[BranchImplementAlert]}}} to your comments. ||
|| Features: || FeatureAlert ||

The inline text of an alert will be used to display an alert element.

When a control form is valid by its 'constraint', the alert will be hidden.  When a control form is invalid by its 'constraint', the alert will to be displayed.

Since the Schema Validation is not supported yet, that part of the alert support is not supported yet either.  I did put two test situations in my alert test case that test this and fail.  When the Schema Validation is supported, those situations should pass (I think).

An alert is not a form control, so its ref is not a "UI binding".  Therefore, when elements like label, help, hint and alert can bind to an invalid node but they are not themselves invalid.  Only form controls distinguish rendition between valid and invalid states, and the alert element provides some additional information that a form control can use when making this distinction.  Moreover, the data to which an alert is bound is a message about the invalidity of some other node.  That message is not itself likely to be invalid anyway. 

I need a code review on r648 for my changes in Alert.js.  I actually did not move the xf:alert element after the control.  I created a new element called alert (notice no xf:) and put that after the control.  Then, I made xf:alert have "display: none" as its style and I updated the new alert element's style to work correctly.

The @ref support will have to be fixed to work correctly.